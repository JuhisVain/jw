(in-package #:war)

(defvar *panel-width* 200)
(defparameter *panel* nil)

(defun draw-panel (selected-tile)
  (sdl:draw-filled-polygon
   (list (sdl:point :x (- (sdl:width window)
			  *panel-width*)
		    :y 0)
	 (sdl:point :x (sdl:width window)
		    :y 0)
	 (sdl:point :x (sdl:width window)
		    :y (sdl:height window))
	 (sdl:point :x (- (sdl:width window)
			  *panel-width*)
		    :y (sdl:height window)))
   :surface window :color sdl:*red*)
  (draw-unit-list selected-tile))

(defun draw-unit-list (selected-tile)
  (if (or (null selected-tile) (< (car selected-tile) 0) (< (cdr selected-tile) 0))
      (return-from draw-unit-list))
  (do* ((unit-list (tile-units (tile-at
				(car selected-tile) (cdr selected-tile)))
		   (cdr unit-list))
	(unit (car unit-list) (car unit-list))
	(unit-shift 0 (+ unit-shift 100)))
       ((null unit))
    (sdl:draw-surface-at-* (graphics-surface (army-counter unit))
			   (- (sdl:width window) *panel-width*)
			   (+ 0 unit-shift)
			   :surface window)
    (format t "drawing at: ~a ~a ~%" (+ (- (sdl:width window) *panel-width*) 150) (+ 125 unit-shift))
    (sdl:draw-string-solid-* (write-to-string (car (army-troops unit)))
			     (+ (- (sdl:width window) *panel-width*) 100)
			     (+ 25 unit-shift)
			     :surface window :color sdl:*white*)
    ))
